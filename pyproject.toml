[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[project]
authors = [
  { name = "Yvan Nollet", email = "yvan.nollet@rayference.eu" },
  { name = "Vincent Leroy", email = "vincent.leroy@rayference.eu" },
]
classifiers = [
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
dependencies = [
  "click>=8.1.3",
  "pint>=0.20.1",
  "netCDF4>=1.6.2",
  "numpy>=1.22,<2",
  "pandas>=1.5.2",
  "scipy>=1.9.3",
  "xarray>=2022.12.0",
  "ussa1976>=0.3.4",
  "attrs>=22.2.0",
  "importlib-resources>=5.10.2",
]
description = "Reference atmospheric thermophysical profiles for radiative transfer applications in Earth's atmosphere."
license = { text = "LGPLv3" }
name = "joseki"
readme = "README.md"
requires-python = ">= 3.9,<3.13"
version = "2.7.0.dev0"

[project.scripts]
joseki = "joseki.__main__:main"

[project.urls]
changelog = "https://github.com/rayference/joseki/blob/main/docs/changelog.md"
documentation = "https://rayference.github.io/joseki/latest"
homepage = "https://github.com/rayference/joseki"
issues = "https://github.com/rayference/joseki/issues"
repository = "https://github.com/rayference/joseki"

[tool.coverage.html]
directory = "./reports/coverage/html"

[tool.coverage.json]
output = "./reports/coverage/coverage.json"

[tool.coverage.paths]
equivalent = ["src/", ".venv/"]

[tool.coverage.report]
omit = ["src/*/__init__.py", "src/*/_version.py"]
precision = 2
show_missing = true
skip_covered = true

[tool.coverage.run]
branch = true
parallel = true
source = ["src/"]

[tool.hatch.build.targets.wheel]
packages = ["src/joseki"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.ruff]
select = ["I"]
src = ["src", "tests"]

[tool.ruff.isort]
relative-imports-order = "closest-to-furthest"

[dependency-groups]
dev = [
  "autodocsumm>=0.2.14",
  "coverage>=7.1.0",
  "furo>=2024.1.29",
  "ipykernel>=6.21.0",
  "ipython>=8.9.0",
  "jupyterlab>=3.5.3",
  "linkify-it-py>=2.0.0",
  "matplotlib>=3.6.3",
  "myst-parser>=2.0.0",
  "nbstripout>=0.6.1",
  "pytest>=7.2.1",
  "sphinx-autoapi>=3.6.0",
  "sphinx-autobuild>=2024.10.3",
  "sphinx-autodoc-typehints>=1.25.0",
  "sphinx-copybutton>=0.5.2",
  "sphinx>=7.0.0",
  "sphinxcontrib-bibtex>=2.6.5",
  "taskipy>=1.12.2",
]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.taskipy.tasks]
coverage-combine = "python -m coverage combine"
coverage-html = "python -m coverage html --skip-covered --skip-empty"
coverage-pytest = "coverage run -m pytest tests"
coverage-show = "python -m coverage report --fail-under=90"
coverage-report = "task coverage-pytest && task coverage-combine && task coverage-show && task coverage-html"
docs-build = "sphinx-build -b html docs docs/_build/html"
docs-serve = "sphinx-autobuild docs docs/_build/html"
docs-clean = "rm -rf docs/_build"
